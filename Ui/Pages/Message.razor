@page "/message"
@using Ui.Models

<PageTitle>Index</PageTitle>

@if (UserList != null && UserList.Any())
{
    <div class="row">
        <div class="col-6">
            @if (Receiver != null)
            {

                <div id="container">
                    <div id="sample">
                        <SfListView ID="list"
                                    DataSource="@ChatMessage"
                                    ShowHeader="true"
                                    Height="420px"
                                    HeaderTitle="Chat">
                            <ListViewFieldSettings TValue="ChatMessage" Id="Id" Text="message"></ListViewFieldSettings>
                            <ListViewTemplates TValue="ChatMessage">
                                <Template>
                                    @{
                                        ChatMessage currentData = context as ChatMessage;

                                        <div class="flex item__container">
                                            <div class="flex flex__1 vertical__center flex__center @(currentData.FromUserId == Receiver.Id ? "flex__order__2" : "")">
                                                <span class='e-avatar e-avatar-circle' icon=@context.FromUserName?.Substring(0, 1).ToUpper()> @context.FromUserName?.Substring(0, 1).ToUpper()</span>
                                            </div>
                                            <div class="flex content__container flex__8 vertical padding @(currentData.FromUserId == Receiver.Id ? "right__align" : "left__align")">
                                                <div class="bold">@currentData.Message</div>
                                                <div class="small__font">@currentData.CreatedDate.ToString("R")</div>
                                            </div>
                                        </div>
                                    }
                                </Template>
                            </ListViewTemplates>
                        </SfListView>
                        <div class="flex">
                            <div class="flex__8 padding">
                                <SfTextBox Placeholder="Type your message"
                                           @ref="@_sfTextBox"
                                ></SfTextBox>
                            </div>
                            <div class="flex__1">
                                <button class="e-btn" @onclick="@OnSend" disabled="@(!IsConnected)">Send</button>
                            </div>
                        </div>
                    </div>
                </div>





                @*<SfListView ID="list" DataSource="@ChatMessage" EnableVirtualization="true"  CssClass="e-list-template ui-list" HeaderTitle="@Receiver.Email" Height="500px" ShowHeader="true">
                    <ListViewFieldSettings Id="Id" Text="Name" TValue="ChatMessage"></ListViewFieldSettings>
                    <ListViewTemplates TValue="ChatMessage">
                        <Template>
                            @{
                                ChatMessage? currentData = context;
                                <div class="e-list-wrapper e-list-multi-line e-list-avatar" @onclick="(async (e) => await OnMessageSelect(currentData))">
                                    <span id="showUI" class='e-avatar e-avatar-circle' icon=@context.FromUserName?.Substring(0, 1).ToUpper()> @context.FromUserName?.Substring(0, 1).ToUpper()</span>
                                    <span class='e-list-content'>@context.Message</span>
                                </div>
                            }
                        
                        </Template>
                    </ListViewTemplates>
                </SfListView>*@
            }
            else
            {
                <p>No Contact Selected</p>
            }
        </div>
        <div class="col-6">
            <SfListView ID="list" DataSource="@UserList" EnableVirtualization="true"  CssClass="e-list-template ui-list" HeaderTitle="Contacts" Height="500px" ShowHeader="true">
                <ListViewFieldSettings Id="Id" Text="Name" TValue="UserDto"></ListViewFieldSettings>
                <ListViewTemplates TValue="UserDto">
                    <Template>
                        @{
                            UserDto? currentData = context;
                            <div class="e-list-wrapper e-list-multi-line e-list-avatar" @onclick="async (e) => await OnSelect(currentData)">
                                <span id="showUI" class='e-avatar e-avatar-circle' icon=@context.UserName?.Substring(0, 1).ToUpper()> @context.UserName?.Substring(0, 1).ToUpper()</span>
                                <span class="e-list-item-header">@context.UserName</span>
                                <span class="e-list-content">@context.Email</span>
                            </div>
                        }
                        
                    </Template>
                </ListViewTemplates>
            </SfListView>
           
        </div>
    </div>
}
else
{
    <SfSpinner Visible="true"></SfSpinner>
}


<style>
    #list {
        box-shadow: 0 1px 4px #ddd;
        border-bottom: 1px solid #ddd;
    }

    #sample {
        height: 220px;
        margin: 0 auto;
        display: block;
        max-width: 350px;
    }

    #list {
        margin: 0 auto;
        border: 1px solid #ccc;
    }

        #list .e-list-item {
            height: auto;
            cursor: pointer;
            line-height: 22px;
            padding: 8px;
        }

        #list.e-listview .e-list-header {
            background-color: #0278d7;
            color: white;
        }

        #list .e-list-item.e-active {
            background-color: transparent;
        }

        #list .e-list-item.e-hover {
            background-color: transparent;
        }

    .padding {
        padding: 4px;
    }

    .right__align {
        text-align: right;
        margin-right: 8px;
        padding-right: 8px;
    }

    .left__align {
        margin-left: 8px;
        padding-left: 8px;
    }

    .content__container {
        background-color: aliceblue;
    }

    .flex {
        display: flex;
    }

    .flex__center {
        justify-content: center;
    }

    .vertical__center {
        align-items: center;
    }

    .vertical {
        flex-direction: column;
    }

    .flex__order__1 {
        order: 1;
    }

    .flex__order__2 {
        order: 2;
    }

    .flex__1 {
        flex: 1;
    }

    .flex__2 {
        flex: 2;
    }

    .flex__3 {
        flex: 3;
    }

    .flex__5 {
        flex: 5;
    }

    .flex__8 {
        flex: 8;
    }

    .bold {
        font-weight: 500;
    }

    .margin {
        margin: 10px;
        width: 350px;
    }

    .small__font {
        font-size: 13px;
        margin: 2px 0;
    }

    .pic01 {
        background-image: url("https://ej2.syncfusion.com/demos/src/grid/images/1.png");
    }

    .pic02 {
        background-image: url("https://ej2.syncfusion.com/demos/src/grid/images/3.png");
    }

    .pic03 {
        background-image: url("https://ej2.syncfusion.com/demos/src/grid/images/5.png");
    }

    .pic04 {
        background-image: url("https://ej2.syncfusion.com/demos/src/grid/images/2.png");
    }
</style>


