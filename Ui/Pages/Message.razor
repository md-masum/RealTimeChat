@page "/message"
@using Ui.Models

<PageTitle>Index</PageTitle>

@if (UserList != null && UserList.Any())
{
    <div class="row h-100">
        <div class="col-6 h-100">
            @if (Receiver != null)
            {
                string title = $"Chat: {Receiver.UserName}";
                <div id="container" class="h-100">
                    <div id="sample" class="h-100">
                        <SfListView ID="listOfMessage"
                                    DataSource="@ChatMessage"
                                    ShowHeader="true"
                                    Height="90%"
                                    HeaderTitle="@title">
                            <ListViewFieldSettings TValue="ChatMessage" Id="Id" Text="message"></ListViewFieldSettings>
                            <ListViewTemplates TValue="ChatMessage">
                                <Template>
                                    @{
                                        ChatMessage currentData = context as ChatMessage;

                                        <div class="flex item__container">
                                            <div class="flex flex__1 vertical__center flex__center @(currentData.FromUserId == Receiver.Id ? "flex__order__2" : "")">
                                                <span class='e-avatar e-avatar-circle' icon=@context.FromUserName?.Substring(0, 1).ToUpper()> @context.FromUserName?.Substring(0, 1).ToUpper()</span>
                                            </div>
                                            <div class="flex content__container flex__8 vertical padding @(currentData.FromUserId == Receiver.Id ? "right__align" : "left__align")">
                                                <div class="bold">@currentData.Message</div>
                                                <div class="small__font">@currentData.CreatedDate.ToString("R")</div>
                                                <div class="small">
                                                    <button class="btn btn-sm btn-link">edit</button>
                                                    <button class="btn btn-sm btn-link">delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </Template>
                            </ListViewTemplates>
                        </SfListView>
                        <div class="flex">
                            <div class="flex__6 padding">
                                <SfTextBox Placeholder="Type your message" @bind-Value="_sfTextBox"
                                ></SfTextBox>
                            </div>
                            <div class="flex__3">
                                <button class="e-btn" @onclick="@OnAudioCall" disabled="@(!IsConnected)">Call</button>
                                <button class="e-btn" @onclick="@OnVideoCall" disabled="@(!IsConnected)">Video Call</button>
                                <button class="e-btn" @onclick="@OnSend" disabled="@(!IsConnected)">Send</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <p>No Contact Selected</p>
            }
        </div>
        <div class="col-6 h-100">
            <SfListView ID="list" DataSource="@UserList" EnableVirtualization="true"  CssClass="e-list-template ui-list" HeaderTitle="Contacts" Height="50%" ShowHeader="true">
                <ListViewFieldSettings Id="Id" Text="Name" TValue="UserDto"></ListViewFieldSettings>
                <ListViewTemplates TValue="UserDto">
                    <Template>
                        @{
                            UserDto currentData = context;
                            <div class="e-list-wrapper e-list-multi-line e-list-avatar e-list-badge" @onclick="async (e) => await OnSelect(currentData)">
                                <span id="showUI" class='e-avatar e-avatar-circle' icon=@context.UserName?.Substring(0, 1).ToUpper()> @context.UserName?.Substring(0, 1).ToUpper()</span>
                                <span class="e-badge icons"><span class="available"></span></span>
                                <span class="e-list-item-header">@context.UserName</span>
                                <span class="e-list-content">@context.Email</span>
                            </div>
                        }
                        
                    </Template>
                </ListViewTemplates>
            </SfListView>
            <div class="row">
                <div class="col-6">
                    <div id="local-video-div">
                        <video id="local-video" autoplay></video>
                        <button @onclick="@MuteVideo">Mute Video</button>
                        <button @onclick="@MuteAudio">Mute Audio</button>
                    </div>
                </div>
                <div class="col-6">
                    <div id="remote-video-div">
                        <video id="remote-video" autoplay></video>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <SfSpinner Visible="@_isLoading"></SfSpinner>
}


<style>
    #listOfMessage {
        box-shadow: 0 1px 4px #ddd;
        border-bottom: 1px solid #ddd;
    }

    #sample {
        height: 220px;
        margin: 0 auto;
        display: block;
        max-width: 100%;
    }

    #listOfMessage {
        margin: 0 auto;
        border: 1px solid #ccc;
    }

        #listOfMessage .e-list-item {
            height: auto;
            cursor: pointer;
            line-height: 22px;
            padding: 8px;
        }

        #listOfMessage.e-listview .e-list-header {
            background-color: transparent;
            position: sticky;
        }

        #listOfMessage .e-list-item.e-active {
            background-color: #0278d7;
        }

        #listOfMessage .e-list-item.e-focused {
            background-color: #0278d7;
            color: black;
        }

        #listOfMessage .e-list-item.e-hover {
            background-color: #0278d7;
            color: black;
        }

    .padding {
        padding: 4px;
    }

    .right__align {
        text-align: right;
        margin-right: 8px;
        padding-right: 8px;
    }

    .left__align {
        margin-left: 8px;
        padding-left: 8px;
    }

    .content__container {
        background-color: aliceblue;
    }

    .flex {
        display: flex;
    }

    .flex__center {
        justify-content: center;
    }

    .vertical__center {
        align-items: center;
    }

    .vertical {
        flex-direction: column;
    }

    .flex__order__1 {
        order: 1;
    }

    .flex__order__2 {
        order: 2;
    }

    .flex__1 {
        flex: 1;
    }

    .flex__2 {
        flex: 2;
    }

    .flex__3 {
        flex: 3;
    }

    .flex__5 {
        flex: 5;
    }

    .flex__6 {
        flex: 6;
    }

    .flex__7 {
        flex: 7;
    }

    .flex__8 {
        flex: 8;
    }

    .bold {
        font-weight: 500;
    }

    .margin {
        margin: 10px;
        width: 350px;
    }

    .small__font {
        font-size: 13px;
        margin: 2px 0;
    }
</style>


